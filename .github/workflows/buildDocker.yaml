---
name: Build Docker YAML

on:
  workflow_call:
    inputs:
      subfolder:
        required: false
        type: string
        default: './'
      dockerfileName:
        required: false
        type: string
        default: 'Dockerfile'
      imageNameAddon:
        required: false
        type: string
        default: ''
      imageTag:
        required: false
        type: string
        default: ''
      branch-name:
        required: false
        type: string
        default: ${{ github.ref }}
      platforms:
        required: false
        type: string
        default: 'linux/amd64'
      testImage:
        required: false
        type: boolean
        default: false
      testCommand:
        required: false
        type: string
        default: '/bin/sh'
    secrets:
      GH_SSH_PRIVATE:
        required: false

env:
  REGISTRY: ghcr.io

permissions:
  packages: write
  contents: read

jobs:
  docker-build-and-push:
    timeout-minutes: 60
    permissions:
      packages: write
      contents: read
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.1
        with:
          ref: ${{ inputs.branch-name }}
          fetch-depth: '0'

      - name: Show space
        run: df -h

      - name: Free up space
        run: |
          sudo rm -rf /usr/share/dotnet \
          sudo rm -rf /opt/ghc \
          sudo rm -rf "/usr/local/share/boost" \
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"

      - name: Show space
        run: df -h

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3.1.0

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3.1.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5.5.1
        with:
          images: ${{env.REGISTRY}}/${{github.repository}}${{inputs.imageNameAddon}}
          flavor: |
            latest=true
          tags: |
            type=raw,value=action-${{ github.run_id }}-${{ github.run_attempt }}
            type=semver,pattern={{version}}
            type=raw,value=${{inputs.imageTag}}

      - uses: webfactory/ssh-agent@v0.9.0
        env:
          GH_SSH: ${{ secrets.GH_SSH_PRIVATE }}
        if: env.GH_SSH != null
        with:
          ssh-private-key: ${{ secrets.GH_SSH_PRIVATE }}

      - name: Build Docker image with SSH
        uses: docker/build-push-action@v5.2.0
        env:
          GH_SSH: ${{ secrets.GH_SSH_PRIVATE }}
        if: env.GH_SSH != null
        with:
          context: ${{ inputs.subfolder }}
          platforms: ${{ inputs.platforms }}
          file: ${{ inputs.subfolder }}${{ inputs.dockerfileName }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          ssh: |
            default=${{ env.SSH_AUTH_SOCK }}

      - name: Build Docker image without SSH
        uses: docker/build-push-action@v5.2.0
        env:
          GH_SSH: ${{ secrets.GH_SSH_PRIVATE }}
        if: env.GH_SSH == null
        with:
          context: ${{ inputs.subfolder }}
          platforms: ${{ inputs.platforms }}
          file: ${{ inputs.subfolder }}${{ inputs.dockerfileName }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max

  image-scanning:
    if: false
    # if: ((github.event_name == 'workflow_dispatch' || github.event_name=='push') && github.ref == 'refs/heads/main') || github.event_name == 'schedule'
    runs-on: ubuntu-22.04
    needs: docker-build-and-push
    timeout-minutes: 60
    continue-on-error: true
    permissions:
      packages: read
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.1
        with:
          ref: ${{ inputs.branch-name }}
          fetch-depth: '0'

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3.1.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Scan for vulnerabilities
        id: scan
        uses: crazy-max/ghaction-container-scan@v3.0.0
        with:
          annotations: true
          dockerfile: ${{ inputs.subfolder }}Dockerfile
          image: ${{env.REGISTRY}}/${{github.repository}}${{inputs.imageNameAddon}}:action-${{github.run_id}}-${{github.run_attempt}} # yamllint disable-line rule:line-length
        env:
          TRIVY_TIMEOUT: 5m

  test-image:
    if: ${{ inputs.testImage }}
    runs-on: ubuntu-22.04
    timeout-minutes: 60
    needs: docker-build-and-push
    permissions:
      packages: read
      contents: read

    steps:
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3.1.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Startup image
        timeout-minutes: 20
        run: |
          docker run --rm --platform=linux/amd64 --entrypoint=/bin/sh \
            ${{env.REGISTRY}}/${{github.repository}}${{inputs.imageNameAddon}}:action-${{github.run_id}}-${{github.run_attempt}} \
            -c "${{inputs.testCommand}}"
